sparkConf:
  #spark任务名称， 必填
  appName: pmml-deploy-{year}

  #可选，本地测试可填为local
#  master: local

  #是否启用hive支持
#  enableHiveSupport: false

  #spark其它配置选项，如内存，shffle partitions数量等
  conf:
    spark.executor.memory: 4g

appConf:
  #debug开启时，每个节点会做持久化
  debug: true
  #持久化数量，0代表全量
  limit: 10
  #中间结果路径
  savePath: /user/fbi/model_deploy/
  #数据源结果保存路径
  sourcePath: /user/fbi/model_source/

#一个子节点只有一个父节点，所以树更合适
tree:
  #节点描述
  desc: 合并AB
  #名称，用于标识一个组件
  name: model_pmml
  #传递给组件的参数，包括模型超参数，以及配置参数等
  parameters:
    #pmml文件路径，暂只支持本地文件，spark-submit可通过--files glm1.pmml上传
    pmmlPath: glm_all.pmml

  #子节点合并所有结果，如果children只有一个，可省略joinType，joinKey
  #join类型，full(默认)， inner， left， right
  joinType: full
  #join关联件，默认uid
  joinKey: uid
  children:
    - desc: A模型
      name: model_pmml
      parameters:
        pmmlPath: a.pmml
      children:
        - desc: A模型数据源
          name: data_source
          parameters:
            #支持hql(query), hql_file(path), json(path)，parque
            type: hql
            #如sql过于复杂，可配置sqlFile路径
            query:

      transformer:
        - desc: A坏人概率
          name: feature_sql
          parameters:
            sql: select uid, is_bad as a_bad


    - desc: B模型
      name: model_pmml
      parameters:
        pmmlPath: b.pmml
      children:
        - desc: B模型数据源
          name: data_source
          parameters:
            type: hql
            query:
      transformer:
        - desc: B坏人概率
          name: feature_sql
          parameters:
            sql: select uid, is_bad as b_bad

  #transformer节点，pipeline模式
  transformer:
    - desc: 坏人概率转化
      name: feature_sql
      parameters:
        sql: select *,
              case when (power(is_bad, 0.25) - 0.7)/0.16 * 0.3 + 0.715 > 1 then 1
                when (power(is_bad, 0.25) - 0.7)/0.16 * 0.3 + 0.715 < 0 then 0
                else (power(is_bad, 0.25) - 0.7)/0.16 * 0.3 + 0.715
              end as p_total

    - desc: 评分卡分数转化
      name: feature_sql
      parameters:
        sql: select *, floor(900 - p_total * 600) as score


















